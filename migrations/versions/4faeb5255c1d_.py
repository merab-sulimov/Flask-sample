"""empty message

Revision ID: 4faeb5255c1d
Revises: 
Create Date: 2016-12-19 00:01:54.165264

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4faeb5255c1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('referer_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('public_key', sa.Text(), nullable=True),
    sa.Column('public_key_fingerprint', sa.String(length=100), nullable=True),
    sa.Column('pincode', sa.String(length=8), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('photo_filename', sa.String(length=255), nullable=True),
    sa.Column('profile_description', sa.Text(), nullable=True),
    sa.Column('private_description', sa.Text(), nullable=True),
    sa.Column('privacy_policy', sa.Text(), nullable=True),
    sa.Column('seller_fee_paid', sa.Boolean(), nullable=True),
    sa.Column('premium_member', sa.Boolean(), nullable=True),
    sa.Column('is_newsletter_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_sales_report_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_marketplace_digest_enabled', sa.Boolean(), nullable=True),
    sa.Column('credit', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_seller_disabled', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('last_logged_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['referer_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_last_logged_on'), 'users', ['last_logged_on'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('variables',
    sa.Column('variable_id', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.Column('set_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('variable_id')
    )
    op.create_table('bitcoin_addresses',
    sa.Column('bitcoin_address_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=40), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('touched_on', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.BigInteger(), nullable=True),
    sa.Column('is_amount_confirmed', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('bitcoin_address_id'),
    sa.UniqueConstraint('address')
    )
    op.create_index(op.f('ix_bitcoin_addresses_is_current'), 'bitcoin_addresses', ['is_current'], unique=False)
    op.create_index(op.f('ix_bitcoin_addresses_touched_on'), 'bitcoin_addresses', ['touched_on'], unique=False)
    op.create_table('contents',
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=20), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_index(op.f('ix_contents_created_on'), 'contents', ['created_on'], unique=False)
    op.create_index(op.f('ix_contents_is_published'), 'contents', ['is_published'], unique=False)
    op.create_index(op.f('ix_contents_type'), 'contents', ['type'], unique=False)
    op.create_index(op.f('ix_contents_updated_on'), 'contents', ['updated_on'], unique=False)
    op.create_table('favorite_searches',
    sa.Column('favorite_search_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('q', sa.String(length=255), nullable=False),
    sa.Column('results_count', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('favorite_search_id')
    )
    op.create_table('newsletters',
    sa.Column('newsletter_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('recipients', sa.String(length=20), nullable=False),
    sa.Column('recipients_count', sa.Integer(), nullable=True),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('subject', sa.String(length=20), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('sent_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('newsletter_id')
    )
    op.create_index(op.f('ix_newsletters_created_on'), 'newsletters', ['created_on'], unique=False)
    op.create_index(op.f('ix_newsletters_is_sent'), 'newsletters', ['is_sent'], unique=False)
    op.create_index(op.f('ix_newsletters_recipients'), 'newsletters', ['recipients'], unique=False)
    op.create_index(op.f('ix_newsletters_sent_on'), 'newsletters', ['sent_on'], unique=False)
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('data_json', sa.Text(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notifications_created_on'), 'notifications', ['created_on'], unique=False)
    op.create_index(op.f('ix_notifications_type'), 'notifications', ['type'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=50), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('private_description', sa.Text(), nullable=True),
    sa.Column('private_filename', sa.String(length=255), nullable=True),
    sa.Column('private_filename_fs', sa.String(length=255), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('youtube_href', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('delivery_time', sa.Interval(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_created_on'), 'products', ['created_on'], unique=False)
    op.create_index(op.f('ix_products_is_deleted'), 'products', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_products_is_disabled'), 'products', ['is_disabled'], unique=False)
    op.create_index(op.f('ix_products_is_private'), 'products', ['is_private'], unique=False)
    op.create_index(op.f('ix_products_price'), 'products', ['price'], unique=False)
    op.create_index(op.f('ix_products_title'), 'products', ['title'], unique=False)
    op.create_index(op.f('ix_products_unique_id'), 'products', ['unique_id'], unique=True)
    op.create_index(op.f('ix_products_updated_on'), 'products', ['updated_on'], unique=False)
    op.create_index(op.f('ix_products_uuid'), 'products', ['uuid'], unique=False)
    op.create_index(op.f('ix_products_views'), 'products', ['views'], unique=False)
    op.create_table('tickets',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('ticket_id')
    )
    op.create_index(op.f('ix_tickets_created_on'), 'tickets', ['created_on'], unique=False)
    op.create_index(op.f('ix_tickets_is_closed'), 'tickets', ['is_closed'], unique=False)
    op.create_index(op.f('ix_tickets_is_deleted'), 'tickets', ['is_deleted'], unique=False)
    op.create_table('vouchers',
    sa.Column('voucher_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=15), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_invite', sa.Boolean(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=False),
    sa.Column('used_count', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('voucher_id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('discounts',
    sa.Column('discount_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=15), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('used_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('discount_id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('favorite_products',
    sa.Column('favorite_product_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('favorite_product_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('private_message', sa.Text(), nullable=True),
    sa.Column('private_filename', sa.String(length=255), nullable=True),
    sa.Column('private_filename_fs', sa.String(length=255), nullable=True),
    sa.Column('delivery_time', sa.Interval(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('closed_on', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_orders_price'), 'orders', ['price'], unique=False)
    op.create_index(op.f('ix_orders_state'), 'orders', ['state'], unique=False)
    op.create_table('product_photos',
    sa.Column('product_photo_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('product_photo_id')
    )
    op.create_table('disputes',
    sa.Column('dispute_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('resolution', sa.String(length=20), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('deadline_passed', sa.Boolean(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('dispute_id')
    )
    op.create_index(op.f('ix_disputes_created_on'), 'disputes', ['created_on'], unique=False)
    op.create_index(op.f('ix_disputes_is_closed'), 'disputes', ['is_closed'], unique=False)
    op.create_index(op.f('ix_disputes_is_deleted'), 'disputes', ['is_deleted'], unique=False)
    op.create_table('feedbacks',
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('reply', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_index(op.f('ix_feedbacks_created_on'), 'feedbacks', ['created_on'], unique=False)
    op.create_index(op.f('ix_feedbacks_type'), 'feedbacks', ['type'], unique=False)
    op.create_table('orders_history',
    sa.Column('order_history_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_history_id')
    )
    op.create_index(op.f('ix_orders_history_state'), 'orders_history', ['state'], unique=False)
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('is_hold', sa.Boolean(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('data_json', sa.Text(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_transactions_amount'), 'transactions', ['amount'], unique=False)
    op.create_index(op.f('ix_transactions_is_hold'), 'transactions', ['is_hold'], unique=False)
    op.create_index(op.f('ix_transactions_type'), 'transactions', ['type'], unique=False)
    op.create_table('withdrawals',
    sa.Column('withdrawal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('is_rejected', sa.Boolean(), nullable=True),
    sa.Column('data_json', sa.Text(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('withdrawal_id')
    )
    op.create_index(op.f('ix_withdrawals_type'), 'withdrawals', ['type'], unique=False)
    op.create_table('conversations',
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('is_hidden_by_sender', sa.Boolean(), nullable=True),
    sa.Column('is_hidden_by_recipient', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('dispute_id', sa.Integer(), nullable=True),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('withdrawal_id', sa.Integer(), nullable=True),
    sa.Column('newsletter_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dispute_id'], ['disputes.dispute_id'], ),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.newsletter_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.ForeignKeyConstraint(['withdrawal_id'], ['withdrawals.withdrawal_id'], ),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_index(op.f('ix_conversations_created_on'), 'conversations', ['created_on'], unique=False)
    op.create_index(op.f('ix_conversations_type'), 'conversations', ['type'], unique=False)
    op.create_index(op.f('ix_conversations_updated_on'), 'conversations', ['updated_on'], unique=False)
    op.create_table('messages',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('sent_on', sa.DateTime(), nullable=True),
    sa.Column('read_on', sa.DateTime(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_index(op.f('ix_messages_read_on'), 'messages', ['read_on'], unique=False)
    op.create_index(op.f('ix_messages_sent_on'), 'messages', ['sent_on'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_sent_on'), table_name='messages')
    op.drop_index(op.f('ix_messages_read_on'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_conversations_updated_on'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_type'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_created_on'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_withdrawals_type'), table_name='withdrawals')
    op.drop_table('withdrawals')
    op.drop_index(op.f('ix_transactions_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_is_hold'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_amount'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_orders_history_state'), table_name='orders_history')
    op.drop_table('orders_history')
    op.drop_index(op.f('ix_feedbacks_type'), table_name='feedbacks')
    op.drop_index(op.f('ix_feedbacks_created_on'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_disputes_is_deleted'), table_name='disputes')
    op.drop_index(op.f('ix_disputes_is_closed'), table_name='disputes')
    op.drop_index(op.f('ix_disputes_created_on'), table_name='disputes')
    op.drop_table('disputes')
    op.drop_table('product_photos')
    op.drop_index(op.f('ix_orders_state'), table_name='orders')
    op.drop_index(op.f('ix_orders_price'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('favorite_products')
    op.drop_table('discounts')
    op.drop_table('vouchers')
    op.drop_index(op.f('ix_tickets_is_deleted'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_is_closed'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_created_on'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_products_views'), table_name='products')
    op.drop_index(op.f('ix_products_uuid'), table_name='products')
    op.drop_index(op.f('ix_products_updated_on'), table_name='products')
    op.drop_index(op.f('ix_products_unique_id'), table_name='products')
    op.drop_index(op.f('ix_products_title'), table_name='products')
    op.drop_index(op.f('ix_products_price'), table_name='products')
    op.drop_index(op.f('ix_products_is_private'), table_name='products')
    op.drop_index(op.f('ix_products_is_disabled'), table_name='products')
    op.drop_index(op.f('ix_products_is_deleted'), table_name='products')
    op.drop_index(op.f('ix_products_created_on'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_notifications_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_created_on'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_newsletters_sent_on'), table_name='newsletters')
    op.drop_index(op.f('ix_newsletters_recipients'), table_name='newsletters')
    op.drop_index(op.f('ix_newsletters_is_sent'), table_name='newsletters')
    op.drop_index(op.f('ix_newsletters_created_on'), table_name='newsletters')
    op.drop_table('newsletters')
    op.drop_table('favorite_searches')
    op.drop_index(op.f('ix_contents_updated_on'), table_name='contents')
    op.drop_index(op.f('ix_contents_type'), table_name='contents')
    op.drop_index(op.f('ix_contents_is_published'), table_name='contents')
    op.drop_index(op.f('ix_contents_created_on'), table_name='contents')
    op.drop_table('contents')
    op.drop_index(op.f('ix_bitcoin_addresses_touched_on'), table_name='bitcoin_addresses')
    op.drop_index(op.f('ix_bitcoin_addresses_is_current'), table_name='bitcoin_addresses')
    op.drop_table('bitcoin_addresses')
    op.drop_table('variables')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_last_logged_on'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
